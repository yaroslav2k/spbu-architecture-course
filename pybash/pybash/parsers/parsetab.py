# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "expressionASSIGNMENT IDENTIFIER QUOTES_ENCLOSED_IDENTIFIERempty :identifier : IDENTIFIER\n                      | QUOTES_ENCLOSED_IDENTIFIERassignment : ASSIGNMENTexpression : empty\n                      | identifier\n                      | expression identifier\n                      | assignment"

_lr_action_items = {
    "IDENTIFIER": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
        ],
        [
            5,
            5,
            -5,
            -6,
            -8,
            -2,
            -3,
            -4,
            -7,
        ],
    ),
    "QUOTES_ENCLOSED_IDENTIFIER": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
        ],
        [
            6,
            6,
            -5,
            -6,
            -8,
            -2,
            -3,
            -4,
            -7,
        ],
    ),
    "$end": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
        ],
        [
            -1,
            0,
            -5,
            -6,
            -8,
            -2,
            -3,
            -4,
            -7,
        ],
    ),
    "ASSIGNMENT": (
        [
            0,
        ],
        [
            7,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "expression": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "empty": (
        [
            0,
        ],
        [
            2,
        ],
    ),
    "identifier": (
        [
            0,
            1,
        ],
        [
            3,
            8,
        ],
    ),
    "assignment": (
        [
            0,
        ],
        [
            4,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    ("empty -> <empty>", "empty", 0, "p_empty", "semantic_parser.py", 19),
    (
        "identifier -> IDENTIFIER",
        "identifier",
        1,
        "p_identifier",
        "semantic_parser.py",
        23,
    ),
    (
        "identifier -> QUOTES_ENCLOSED_IDENTIFIER",
        "identifier",
        1,
        "p_identifier",
        "semantic_parser.py",
        24,
    ),
    (
        "assignment -> ASSIGNMENT",
        "assignment",
        1,
        "p_assignment",
        "semantic_parser.py",
        34,
    ),
    ("expression -> empty", "expression", 1, "p_expression", "semantic_parser.py", 40),
    (
        "expression -> identifier",
        "expression",
        1,
        "p_expression",
        "semantic_parser.py",
        41,
    ),
    (
        "expression -> expression identifier",
        "expression",
        2,
        "p_expression",
        "semantic_parser.py",
        42,
    ),
    (
        "expression -> assignment",
        "expression",
        1,
        "p_expression",
        "semantic_parser.py",
        43,
    ),
]
